meta {
    openapi: '3.0.1'
    info: {
        version: '1.0.0'
        title: 'Simple DSL Demo'
        description: 'The Project contains a sample DSL
        
        # Introduction

        This is an API documented in **OpenAPI format** created using
        the [Open API DSL](https://bestsolution-at.github.io/openapi-dsl)
        '
        termsOfService: 'http://bestsolution.at/terms/'
        contact: {
            name: 'BestSolution.at'
            email: 'info@bestsolution.at'
            url: 'https://github.com/BestSolution-at/openapi-dsl'
        }
        license: {
            name: 'MIT'
        }
    }
    servers: [
        {
            url: "http://localhost:8080"
        }
    ]
}

types {
    alias LIMIT = integer(int32)(0,100]
    alias WHEELS = integer(int32)(0,4]
    alias WEIGHT = number(double)(0,10000]
    alias SEATS = integer(int32)[2,6]

    type BaseVehicle {
        _type: string -- descriminator used to differentiate vehicles
        numberOfWheels?: WHEELS -- number of wheels
        weight: WEIGHT -- the weight in KG
    }

    type Car(_type) extends BaseVehicle {
        seats: SEATS    -- number of seats
    }

    type Bicycle(_type) extends BaseVehicle {
        frontGearWheels: int32? -- number of front gears
        backGearWheels?: int32? -- number of back gears
    }

    union Vehicle = Car | Bicycle

    type Error {
        code: int32
        message: string
    }
}

endpoints {
    PetResource at '/vehicles' {
        '' {
            /-
            | Get all vehicles
            | 
            | @param limit maximum number of items
            -/
            get list(query limit?: LIMIT) =>
                200: array<Vehicle,100>
                default: Error
            /-
            | Create a new vehicle
            | 
            | @param vehicle the vehicle to add
            -/
            post create(body vehicle: Vehicle) =>
                200: Vehicle
                default: Error
        }
        '/{id}' {
            /-
            | Get a vehicle by ID
            -/
            get fetch(path id: int64) =>
                200
                default: Error
            /-
            | Remove a vehicle by ID
            -/
            delete remove(path id: int64) =>
                204
                default: Error
        }
    }
}